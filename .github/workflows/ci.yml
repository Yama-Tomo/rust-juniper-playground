name: CI
on:
  pull_request:
  push:
    branches:
    - master

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CI: 1
  RUST_BACKTRACE: short
  RUSTUP_MAX_RETRIES: 10
  RUSTFLAGS: -A dead_code -A unused_mut
#  RUSTC_WRAPPER: sccache
#  SCCACHE_CACHE_SIZE: 1G
#  SCCACHE_DIR: /home/runner/.cache/sccache

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
    steps:
    - uses: actions/checkout@v2
#    - name: install sccache
#      run: |
#        echo $PATH
#        version=v0.2.15
#        curl -L https://github.com/mozilla/sccache/releases/download/${version}/sccache-${version}-x86_64-unknown-linux-musl.tar.gz | tar xz
#        mkdir -p ~/.local/bin
#        cp ./*/sccache ~/.local/bin/
#        chmod +x ~/.local/bin/sccache
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
    - uses: Swatinem/rust-cache@v1
      # rustflagsの指定ごとにキャッシュしないとキャッシュヒットしないのでプロダクションビルド用とkeyを分けて指定することに注意
      with:
        key: test-220127
#    - uses: actions/cache@v2
#      with:
#        path: /home/runner/.cache/sccache
#        key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
#        restore-keys: |
#          ${{ runner.os }}-sccache-
    - name: install required tools
      run: cargo install sqlx-cli
    - name: create .env
      run: |
        echo "TEST_DATABASE_URL=mysql://root@localhost/playground_test_%PARALLELISM_SUFFIX%" >> .env
    - name: compile
      run: cargo test --no-run --locked
    - name: test
      run: cargo test -- --nocapture --quiet
#    - name: sccache stats & stop
#      run: |
#        sccache --show-stats
#        sccache --stop-server || true
